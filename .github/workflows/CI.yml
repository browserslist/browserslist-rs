name: CI

on:
  push:
    branches:
      - main
    tags-ignore:
      - '**'
  pull_request:
    branches:
      - main

jobs:
  test:
    name: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.toml') }}
      - uses: pnpm/action-setup@v2.0.1
        with:
          version: 6.21.1
          run_install: true
      - run: pnpm why caniuse-lite electron-to-chromium node-releases
      - run: cargo test

  lint:
    name: lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.toml') }}
      - run: cargo clippy --all-features
      - run: cargo clippy --example inspect
      - run: cargo clippy --tests

  wasm:
    name: wasm
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: pnpm/action-setup@v2.0.1
        with:
          version: 6.21.1
          run_install: true
      - run: curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh
      - run: pnpm build:wasm:node:dev
      - run: pnpm test:wasm

  napi:
    name: napi
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: pnpm/action-setup@v2.0.1
        with:
          version: 6.21.1
          run_install: true
      - run: pnpm build:napi:dev
      - run: pnpm test:napi

  musl:
    name: musl
    container:
      image: ghcr.io/napi-rs/napi-rs/nodejs-rust:lts-alpine
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - uses: actions/checkout@v2
      - run: cargo build --all-features
